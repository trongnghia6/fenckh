<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/styles.css">
  
</head>

<body>
  <!-- Phần trên của navbar chứa logo và tiêu đề -->
<nav class="navbar-top">
  <div class="container-fluid">
      <a class="navbar-brand" href="#">
          <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo">
          <div class="navbar-title">
            <img src="/dongchu_banner.png" alt="banner">
          </div>
      </a>
  </div>
</nav>

<!-- Phần dưới của navbar chứa các mục nằm ngang -->
<nav class="navbar navbar-expand-lg navbar-bottom">
  <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
          <ul class="navbar-nav">
              <li class="nav-item">
                  <a class="nav-link" href="/maindt">HOME</a>
              </li>
              <li class="nav-item">
                  <a class="nav-link" href="/daotaoxemhd/gvmList">Thông tin GD</a>
              </li>
              <li>
              <li class="nav-item">
                  <a class="nav-link" href="/index/import">Import</a>
              </li>
              <li class="nav-item">
                  <a class="nav-link" href="#">Duyệt</a>
              </li>
              <div class="navbar-nav">
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle bi bi-person" href="/login" id="navbarDropdownUser" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Hi, Lê Đức Thuận
                    </a>
                </div>
          </ul>
      </div>
  </div>
</nav>

  <div class="container-fluid my-4">
        <div class="mx-5" style="width: 100%;">
          <div class="d-flex justify-content-between">
            <button class="btn btn-outline-primary" id="chosseFile">Chọn file</button>
            <!-- Combo box Đợt -->
            <select class="form-select w-25 mx-2" id="combobox-dot">
              <option value="1">Đợt 1</option>
              <option value="2">Đợt 2</option>
              <option value="3">Đợt 3</option>
              <option value="4">Đợt 4</option>
            </select>

            <!-- Combo box với các giá trị CNTT, ATTT, DTVT -->
            <select class="form-select w-25 mx-2" id="combobox-khoa">
              <option value="CNTT">CNTT</option>
              <option value="ATTT">ATTT</option>
              <option value="DTVT">DTVT</option>
            </select>

            <button class="btn btn-outline-primary" id="import">Import</button>
            <button class="btn btn-outline-primary" id="ban-hanh">Ban Hành</button>

            <!-- <button class="btn btn-outline-primary" id="importFile">Import</button> -->
          </div>
          <div id="dataTableContainer" class="h-75"></div>
        </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>

    let dataTam = [];

    document.getElementById('chosseFile').addEventListener('click', function () {
      // Tạo một input để chọn file
      const fileInput = document.createElement('input');
      fileInput.type = 'file';
      fileInput.accept = '.xlsx'; // Chỉ cho phép chọn file Excel

      // Khi có file được chọn
      fileInput.addEventListener('change', function () {
        const formData = new FormData();
        formData.append('excelFile', fileInput.files[0]); // Thêm file vào FormData

        // Gửi yêu cầu POST đến server
        fetch('http://localhost:3000/import', {
          method: 'POST',
          body: formData
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Import thất bại');
            }
            return response.json(); // Chuyển đổi phản hồi sang JSON
          })
          .then(data => {
            if (!data || data.length === 0) {
              throw new Error('Dữ liệu trả về trống');
            }

            // Tạo bảng HTML từ dữ liệu JSON, bỏ qua cột "Ghi chú"
            let tableHtml = '<table class="table table-bordered"><thead><tr>';

            // Lấy tiêu đề từ đối tượng JSON đầu tiên (trừ "Ghi chú")
            const headers = Object.keys(data[0]).filter(key => key !== 'Ghi chú');
            headers.forEach(header => {
              tableHtml += `<th>${header}</th>`;
            });
            tableHtml += '</tr></thead><tbody>';

            // Duyệt qua từng mục trong dữ liệu
            data.forEach(item => {
              tableHtml += '<tr>';
              headers.forEach(key => {
                tableHtml += `<td>${item[key] !== null ? item[key] : ''}</td>`;
              });
              tableHtml += '</tr>';
            });
            tableHtml += '</tbody></table>';

            // Chèn bảng vào thẻ div có id="dataTableContainer"
            document.getElementById('dataTableContainer').innerHTML = tableHtml;

            // Lưu dữ liệu JSON để sử dụng sau
            dataTam = data; // Lưu vào biến toàn cục
          })
          .catch(error => {
            document.getElementById('uploadStatus').innerHTML = `
              <span style="color: red;">Import thất bại!</span>
            `;
            console.error(error);
          });
      });

      // Tự động mở dialog chọn file
      fileInput.click();
    });

    document.getElementById('import').addEventListener('click', function () {
      // Lấy giá trị hiện tại từ combo box "Khoa"
      const khoaValue = document.getElementById('combobox-khoa').value;
      // console.log(khoaValue);
      const dotValue = document.getElementById('combobox-dot').value;
      // console.log(dotValue);
      // Thêm giá trị "Khoa" và "Đợt" vào từng đối tượng trong dữ liệu
      const updatedData = dataTam.map(item => ({
        ...item,            // Sao chép các thuộc tính hiện có của đối tượng
        Khoa: khoaValue,    // Thêm thuộc tính mới "Khoa" với giá trị từ combo box
        Dot: dotValue       // Thêm thuộc tính mới "Đợt" với giá trị từ combo box "Đợt"
      }));


      // Gửi dữ liệu đã được cập nhật đến API save-data
      fetch('http://localhost:3000/save-data', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(updatedData) // Gửi dữ liệu đã được cập nhật
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Gửi dữ liệu thất bại');
          }
          return response.json();
        })
        .then(data => {
          console.log(updatedData);
          if (data.success) {
            alert('Import thành công!');
          } else {
            alert('Import thất bại!');
          }
        })
        .catch(error => {
          alert('Gửi dữ liệu thất bại!');
          console.error('Error:', error);
        });

    });

  </script>
  <script>
    let dataQC = [];

    // Hàm fetch lần đầu để lấy dữ liệu từ server
    async function fetchData() {
      try {
        const response = await fetch('http://localhost:3000/get-table-tam');
        if (!response.ok) {
          throw new Error('Lấy dữ liệu thất bại');
        }
        const data = await response.json();
        dataQC = data; // Lưu dữ liệu vào dataQC
        console.log('Dữ liệu lấy được:', dataQC);
      } catch (error) {
        console.error('Error:', error);
        alert('Lấy dữ liệu thất bại!');
      }
    }

    // Gọi hàm fetchData để lấy dữ liệu khi click
    document.getElementById('ban-hanh').addEventListener('click', async function () {
      await fetchData(); // Gọi để lấy dữ liệu trước

      // Sau khi lấy dữ liệu, gửi dữ liệu đã cập nhật đến server
      console.log('Dữ liệu sẽ được gửi:', dataQC);
      fetch('http://localhost:3000/ban-hanh', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(dataQC) // Gửi dữ liệu đã được cập nhật
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Gửi dữ liệu thất bại');
          }
          return response.json();
        })
        .then(data => {
          if (data.success) {
            alert('Ban hành thành công!');
          } else {
            alert('Ban hành thất bại!');
          }
        })
        .catch(error => {
          alert('Gửi dữ liệu thất bại!');
          console.error('Error:', error);
        });
    });
  </script>

</body>

</html>