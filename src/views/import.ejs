<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/bootstrap/dist/js/bootstrap.min.js">
  <style>
    .background-image {
      background: url('../../picture/OIP.jfif') no-repeat center center;
      background-size: cover;
      /* hoặc contain */
    }

    .grid-center {
      display: grid;
      place-items: center;
    }

    .home-link {
      color: white;
      text-decoration: none;
    }

    .w-20 {
      width: 20% !important;
    }
  </style>
</head>

<body>
  <header class="bg-primary text-white py-2 background-image">
    <div class="container">
      <div class="d-flex">
        <div>
          <img src="../../picture/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo" class="img-fluid"
            style="height: 102.4px;">
        </div>
        <div class="text-center">
          <h1>HỌC VIỆN KỸ THUẬT MẬT MÃ</h1>
          <h2>HỆ THỐNG QUẢN LÍ THÔNG TIN CHO GIẢNG VIÊN</h2>
        </div>
      </div>
    </div>
  </header>

  <nav class="bg-info py-2">
    <div class="d-flex">
      <div class="container d-flex justify-content-center grid-center ">
        <div class="btn btn-primary text-nowrap mx-1">
          <a href="index.html" class="home-link">
            <i class="bi bi-house "></i> Home
          </a>
        </div>
        <div class="dropdown">
          <button class="btn btn-primary dropdown-toggle mx-1" type="button" id="dropdownMenuButton"
            data-bs-toggle="dropdown" aria-expanded="false">
            Quản lí hợp đồng
          </button>
          <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <li><a class="dropdown-item" href="#">Xem hợp đồng</a></li>
            <li><a class="dropdown-item" href="#">Thông tin giảng viên mời</a></li>
            <li><a class="dropdown-item" href="#">Thông tin lớp giảng dạy</a></li>
            <li><a class="dropdown-item" href="#">Lương hợp đồng</a></li>
            <li><a class="dropdown-item" href="#">Lịch sử thay đổi</a></li>
          </ul>
        </div>
        <div class="dropdown">
          <button class="btn btn-primary dropdown-toggle mx-1" type="button" id="dropdownMenuButton"
            data-bs-toggle="dropdown" aria-expanded="false">
            Quản lí giảng dạy
          </button>
          <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <li><a class="dropdown-item" href="#">Quản lí môn học</a></li>
            <li><a class="dropdown-item" href="#">Quản lí lớp học</a></li>
            <li><a class="dropdown-item" href="#">Quản lí đề thi</a></li>
            <li><a class="dropdown-item" href="#">Quản lí coi thi</a></li>
            <li><a class="dropdown-item" href="#">Quản lí chấm thi</a></li>
          </ul>
        </div>
        <div class="dropdown">
          <button class="btn btn-primary dropdown-toggle mx-1" type="button" id="dropdownMenuButton"
            data-bs-toggle="dropdown" aria-expanded="false">
            Thống kê NCKH
          </button>
          <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <li><a class="dropdown-item" href="#">Đề tài, dự án</a></li>
            <li><a class="dropdown-item" href="#">Hợp tác chuyển giao CN</a></li>
            <li><a class="dropdown-item" href="#">Bài báo, ấn phẩm</a></li>
            <li><a class="dropdown-item" href="#">Bằng sáng chế</a></li>
            <li><a class="dropdown-item" href="#">Sách, giáo trình</a></li>
            <li><a class="dropdown-item" href="#">Hướng dẫn sinh viên</a></li>
            <li><a class="dropdown-item" href="#">Xây dựng CT đào tạo</a></li>
            <li><a class="dropdown-item" href="#">NV khoa học và công nghệ khác</a></li>
            <li><a class="dropdown-item" href="#">Biên soạn giáo trình</a></li>
          </ul>
        </div>

        <a href="#" class="btn btn-primary mx-1 text-nowrap">Tin Tức</a>
      </div>
      <div class="my-2 grid-center"><a href="#" class="mx-1 justify-content-end text-nowrap">Hi, Lê Đức...</a></div>

    </div>
  </nav>

  <div class="container-fluid my-4">
    <div class="row">
      <div class="d-flex ">
        <div class=" bg-light mb-4 w-20">
          <h4>Chủ đề</h4>
          <ul class="nav nav-tabs list-group" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
              <nav class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button"
                  data-bs-toggle="dropdown" aria-expanded="false">
                  Giảng viên
                </a>
                <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                  <li><a class="dropdown-item" href="/public/index/ttgiangvien.html">Thông tin GV mời</a></li>
                  <li><a class="dropdown-item" href="/public/index/hdmoi.html">Hợp đồng mời</a></li>
                </ul>
              </nav>
            </li>
            <li class="nav-item" role="presentation">
              <nav class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button"
                  data-bs-toggle="dropdown" aria-expanded="false">
                  Phòng đào tạo
                </a>
                <ul class="dropdown-menu text-center" aria-labelledby="navbarDropdownMenuLink">
                  <li><a class="dropdown-item" href="/public/index/duyethd.html">Duyệt</a></li>
                  <li><a class="dropdown-item" href="/index/import">Import</a></li>
                  <li><a class="dropdown-item" href="/public/index/nhaptay.html">Nhập tay</a></li>
                  <li><a class="dropdown-item" href="/public/index/xemhd.html">Xem hợp đồng</a></li>
                </ul>
              </nav>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link " href="#" id="navbarDropdownMenuLink" role="button">Phòng NCKH</a>
            </li>
            <li class="nav-item text-nowrap" role="presentation"></li>
            <a class="nav-link" href="#" id="navbarDropdownMenuLink" role="button">Phòng Tài Chinh</a>
            </li>
            <li class="nav-item text-nowrap" role="presentation"></li>
            <a class="nav-link" href="#" id="navbarDropdownMenuLink" role="button">Thống Kê</a>
            </li>
            <li class="nav-item" role="presentation"></li>
            <a class="nav-link" href="chatbox.html" id="navbarDropdownMenuLink" role="button">Chat box</a>
            </li>
          </ul>
        </div>
        <div class="mx-5" style="width: 100%;">
          <div class="d-flex justify-content-between">
            <button class="btn btn-outline-primary" id="chosseFile">Chọn file</button>


            <!-- Combo box Đợt -->
            <select class="form-select w-25 mx-2" id="combobox-dot">
              <option value="1">Đợt 1</option>
              <option value="2">Đợt 2</option>
            </select>

            <!-- Combo box Kì -->
            <select class="form-select w-25 mx-2" id="combobox-ki">
              <option value="1">Kì 1</option>
              <option value="2">Kì 2</option>
            </select>

            <!-- Combo box với các giá trị CNTT, ATTT, DTVT -->
            <select class="form-select w-25 mx-2" id="combobox-khoa">
              <option value="CNTT">CNTT</option>
              <option value="ATTT">ATTT</option>
              <option value="DTVT">DTVT</option>
            </select>

            <button class="btn btn-outline-primary" id="import">Import</button>
            <button class="btn btn-outline-primary" id="ban-hanh">Ban Hành</button>

            <!-- <button class="btn btn-outline-primary" id="importFile">Import</button> -->
          </div>
          <div id="dataTableContainer" class="h-75"></div>
        </div>
      </div>
    </div>
  </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>

    let dataTam = [];

    document.getElementById('chosseFile').addEventListener('click', function () {
      // Tạo một input để chọn file
      const fileInput = document.createElement('input');
      fileInput.type = 'file';
      fileInput.accept = '.xlsx'; // Chỉ cho phép chọn file Excel

      // Khi có file được chọn
      fileInput.addEventListener('change', function () {
        const formData = new FormData();
        formData.append('excelFile', fileInput.files[0]); // Thêm file vào FormData

        // Gửi yêu cầu POST đến server
        fetch('http://localhost:3000/import', {
          method: 'POST',
          body: formData
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Import thất bại');
            }
            return response.json(); // Chuyển đổi phản hồi sang JSON
          })
          .then(data => {
            if (!data || data.length === 0) {
              throw new Error('Dữ liệu trả về trống');
            }

            // Tạo bảng HTML từ dữ liệu JSON, bỏ qua cột "Ghi chú"
            let tableHtml = '<table class="table table-bordered"><thead><tr>';

            // Lấy tiêu đề từ đối tượng JSON đầu tiên (trừ "Ghi chú")
            const headers = Object.keys(data[0]).filter(key => key !== 'Ghi chú');
            headers.forEach(header => {
              tableHtml += `<th>${header}</th>`;
            });
            tableHtml += '</tr></thead><tbody>';

            // Duyệt qua từng mục trong dữ liệu
            data.forEach(item => {
              tableHtml += '<tr>';
              headers.forEach(key => {
                tableHtml += `<td>${item[key] !== null ? item[key] : ''}</td>`;
              });
              tableHtml += '</tr>';
            });
            tableHtml += '</tbody></table>';

            // Chèn bảng vào thẻ div có id="dataTableContainer"
            document.getElementById('dataTableContainer').innerHTML = tableHtml;

            // Lưu dữ liệu JSON để sử dụng sau
            dataTam = data; // Lưu vào biến toàn cục
          })
          .catch(error => {
            document.getElementById('uploadStatus').innerHTML = `
              <span style="color: red;">Import thất bại!</span>
            `;
            console.error(error);
          });
      });

      // Tự động mở dialog chọn file
      fileInput.click();
    });

    document.getElementById('import').addEventListener('click', function () {
      // Lấy giá trị hiện tại từ combo box "Khoa"
      const khoaValue = document.getElementById('combobox-khoa').value;
      // console.log(khoaValue);
      const dotValue = document.getElementById('combobox-dot').value;
      // console.log(dotValue);
      // Thêm giá trị "Khoa" và "Đợt" vào từng đối tượng trong dữ liệu
      const updatedData = dataTam.map(item => ({
        ...item,            // Sao chép các thuộc tính hiện có của đối tượng
        Khoa: khoaValue,    // Thêm thuộc tính mới "Khoa" với giá trị từ combo box
        Dot: dotValue       // Thêm thuộc tính mới "Đợt" với giá trị từ combo box "Đợt"
      }));


      // Gửi dữ liệu đã được cập nhật đến API save-data
      fetch('http://localhost:3000/save-data', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(updatedData) // Gửi dữ liệu đã được cập nhật
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Gửi dữ liệu thất bại');
          }
          return response.json();
        })
        .then(data => {
          console.log(updatedData);
          if (data.success) {
            alert('Import thành công!');
          } else {
            alert('Import thất bại!');
          }
        })
        .catch(error => {
          alert('Gửi dữ liệu thất bại!');
          console.error('Error:', error);
        });

    });

  </script>
  <script>
    let dataQC = [];

    // Hàm fetch lần đầu để lấy dữ liệu từ server
    async function fetchData() {
      try {
        const response = await fetch('http://localhost:3000/get-table-tam');
        if (!response.ok) {
          throw new Error('Lấy dữ liệu thất bại');
        }
        const data = await response.json();
        dataQC = data; // Lưu dữ liệu vào dataQC
        console.log('Dữ liệu lấy được:', dataQC);
      } catch (error) {
        console.error('Error:', error);
        alert('Lấy dữ liệu thất bại!');
      }
    }

    // Gọi hàm fetchData để lấy dữ liệu khi click
    document.getElementById('ban-hanh').addEventListener('click', async function () {
      await fetchData(); // Gọi để lấy dữ liệu trước

      // Sau khi lấy dữ liệu, gửi dữ liệu đã cập nhật đến server
      console.log('Dữ liệu sẽ được gửi:', dataQC);
      fetch('http://localhost:3000/ban-hanh', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(dataQC) // Gửi dữ liệu đã được cập nhật
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Gửi dữ liệu thất bại');
          }
          return response.json();
        })
        .then(data => {
          if (data.success) {
            alert('Ban hành thành công!');
          } else {
            alert('Ban hành thất bại!');
          }
        })
        .catch(error => {
          alert('Gửi dữ liệu thất bại!');
          console.error('Error:', error);
        });
    });
  </script>

</body>

</html>