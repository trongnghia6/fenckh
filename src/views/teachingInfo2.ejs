<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="/css/table.css">
  <link rel="stylesheet" href="/css/teachingInfo.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <style>

    /* .suggestions {
      position: absolute;
      background-color: white;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      max-height: 200px;
      overflow-y: auto;
    }

    .suggestion-item {
      padding: 10px;
      cursor: pointer;
    }

    .suggestion-item:hover {
      background-color: #f0f0f0;
    } */

    /* CSS để căn chỉnh label tổng số tiết */
    .total-label {
      margin-top: 10px;
      /* Khoảng cách với bảng */
      text-align: right;
      /* Căn phải */
    }
  </style>
</head>

<body>

  <nav class="navbar-top ">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">
        <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo">
        <div class="navbar-title">
          <img src="/dongchu_banner.png" alt="banner">
        </div>
      </a>
    </div>
  </nav>

  <!-- Phần dưới của navbar chứa các mục nằm ngang -->
          <nav class="navbar navbar-expand-lg navbar-bottom sticky-top">
    <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" id="Home" href=""><i class="fa-solid fa-house"></i></a>
          </li>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Giảng Viên Mời
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/gvmList">Danh sách giảng viên mời</a>
                <a class="nav-link" id="Import" href="">Thêm bằng file</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle active" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Bảng Quy Chuẩn
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/tableTam">Bảng quy chuẩn dự kiến</a>
                <a class="nav-link" href="/tableQC">Bảng quy chuẩn chính thức</a>
                <a class="nav-link active" id="ThongTinGD" href="">Thông tin giảng viên theo lớp</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Mời Giảng
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/classInfoGvm">Thông tin lớp giảng viên mời</a>
                <a  class="nav-link " href="/infoHDGvm" role="button">Thông tin hợp đồng</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Vượt Giờ
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="ThongTinGD" href="#">COMING SOON</a>              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Nghiên Cứu Khoa Học
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="ThongTinGD" href="#">COMING SOON</a>              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Đồ Án
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="ThongTinGD" href="#">COMING SOON</a>              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Thống Kê
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="ThongTinGD" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle fullname" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Hi, Lê Đức Thuận
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="#">Thông tin cá nhân</a>
                <a class="dropdown-item" href="/">Đăng xuất</a>
              </div>
            </div>
          </div>
        </ul>
      </div>
    </div>
  </nav>


  <div class="container-fluid box m-4">
    <div class="">
      <div class="d-flex justify-content-between">
        <div class="d-flex justify-content-center">
          <select class="form-select w-100px mx-1 selectop custom-select" id="combobox-dot">
            <option value="1">Đợt 1</option>
            <option value="2">Đợt 2</option>
          </select>

          <!-- Combo box Đợt -->
          <select class="form-select w-100px mx-1 selectop custom-select" id="combobox-ki">
            <option value="1">Kì 1</option>
            <option value="2">Kì 2</option>
          </select>

          <!-- Combo box Năm -->
          <select class="form-select w-100px mx-1 selectop custom-select" id="combobox-nam">
            <option value="2024">2024</option>
            <option value="2025">2025</option>
            <option value="2026">2026</option>
            <option value="2027">2027</option>
          </select>
          <button id="infoGvm" class="button text-nowrap">Xem dữ liệu</button>
          <button onclick="submitData()" class="button mx-3" id="update-qc" style="display: none;">Cập nhật</button>
          <!-- <button onclick="submitData2()" class="button mx-3" id="update-qc" display="none">Cập nhật</button> -->
          <button onclick="submitData2()" class="button mx-3" id="save-data-all" style="display: none;">Lưu</button>
        </div>
      </div>


      <div class="d-flex my-3" style="height: 70px;">
        <input type="text" id="filterName" placeholder="Tìm theo tên giảng viên" oninput="filterByName()"
          class="form-control m-2 search" style="width: 200px;" />
        <input type="text" id="filterClass" placeholder="Tìm theo tên học phần" oninput="filterByClass()"
          class="form-control m-2 search" style="width: 200px;" />
        <input type="text" id="filterKhoa" placeholder="Tìm theo khoa" oninput="filterByKhoa()"
          class="form-control m-2 search" style="width: 200px;" />
      </div>
      <div id="renderInfo">
        <table class=" text-center" style="width: 100%;">
          <thead>
            <tr>
              <th style="width: 200px;">Học phần</th>
              <th style="width: 50px;">Số TC</th>
              <th style="width: 200px;">GV theo TKB</th>
              <th style="width: 50px;">Mời giảng?</th>
              <th style="width: 100px;">GV giảng dạy</th>
              <th style="width: 50px;">Khoa</th>
              <th style="width: 100px;">Bộ môn</th>
              <th style="width: 50px;">Số tiết LL</th>
              <th style="width: 50px;">Số tiết QC</th>
              <th style="width: 50px;" id="khoaColumn">
                <div class="form-check d-flex">
                  <input class="check" type="checkbox" id="checkAllKhoa" onclick="checkAll('khoa')">
                  <label class="form-check-label" for="checkAllKhoa">Khoa</label>
                </div>
              </th>
              <th style="width: 50px;" id="daoTaoColumn">
                <div class="form-check d-flex">
                  <input class="check" type="checkbox" id="checkAllDaoTao" onclick="checkAll('daoTao')">
                  <label class="form-check-label text-nowrap" for="checkAllDaoTao">Đào Tạo</label>
                </div>
              </th>
              <th style="width: 50px;" id="taiChinhColumn">
                <div class="form-check d-flex">
                  <input class="check" type="checkbox" id="checkAllTaiChinh" onclick="checkAll('taiChinh')">
                  <label class="form-check-label text-nowrap" for="checkAllTaiChinh">Tài Chính</label>
                </div>
              </th>
            </tr>
          </thead>
          <tbody id="tableBody">
            <!-- Dữ liệu sẽ được chèn vào đây -->
          </tbody>
        </table>
      </div>
      <!-- Label tổng số tiết tách riêng với bảng -->
      <div class="total-label d-flex justify-content-end">
        <strong>Tổng số tiết LL: </strong><span id="totalLL">0</span> |
        <strong>Tổng số tiết QC: </strong><span id="totalQC">0</span>
      </div>
    </div>
  </div>
</body>

</html>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>



<script>
  let globalData = []; // Biến toàn cục để lưu dữ liệu từ server
  let nameGv = []; // Biến toàn cục để lưu tất cả tên giảng viên
  let nameGvm = []; // Biến toàn cục để lưu tên giảng viên theo khoa

  // Hàm khởi động ứng dụng
  function init() {
    document.getElementById('infoGvm').addEventListener('click', loadData);
  }

  async function loadData() {
    try {
      // Lấy giá trị từ các combobox
      const dotValue = document.getElementById('combobox-dot').value;
      const kiValue = document.getElementById('combobox-ki').value;
      const namValue = document.getElementById('combobox-nam').value;


      // Tạo đối tượng dữ liệu để gửi
      const requestData = {
        Dot: dotValue,
        Ki: kiValue,
        Nam: namValue,
      };


      // Fetch tên giảng viên mời
      const [gvmResponse, khoaResponse, teachingResponse] = await Promise.all([
        fetch('http://localhost:3000/index/name-gvm'),
        fetch('http://localhost:3000/index/name-gvm-khoa'),
        fetch('http://localhost:3000/teaching-info', {
          method: 'POST', // Sử dụng phương thức POST
          headers: {
            'Content-Type': 'application/json', // Đặt Content-Type là application/json
          },
          body: JSON.stringify(requestData), // Chuyển đổi đối tượng thành chuỗi JSON
        }),
      ]);


      if (!gvmResponse.ok || !khoaResponse.ok || !teachingResponse.ok) {
        alert("Lỗi truy vấn!")
      }

      // Lưu dữ liệu giảng viên cùng với mã phòng ban
      nameGv = await gvmResponse.json();
      console.log('Dữ liệu giảng viên trường :', nameGv); // Kiểm tra dữ liệu

      nameGvm = await khoaResponse.json();
      console.log('Dữ liệu giảng viên mời theo khoa:', nameGvm);

      globalData = await teachingResponse.json();
      console.log('Tổng hợp bảng dữ liệu:', globalData);

      
      
      renderTable(globalData); // Gọi hàm renderTable sau khi đã có đủ dữ liệu


      calculateTotals();
    } catch (error) {
      console.error('Đã có lỗi xảy ra:', error);
    }
  }

  // Hàm render bảng
  function renderTable(data) {
    const tableBody = document.getElementById('tableBody');
    tableBody.innerHTML = ''; // Xóa nội dung cũ

    data.forEach((row) => {
      const tableRow = document.createElement('tr');

      const lopHocPhanTd = document.createElement('td');
      lopHocPhanTd.textContent = `${row.LopHocPhan} (${row.TenLop})` || '';
      tableRow.appendChild(lopHocPhanTd);

      const soTcTd = document.createElement('td');
      soTcTd.textContent = row.SoTinChi || '';
      tableRow.appendChild(soTcTd);

      const giaoVienTd = document.createElement('td');
      giaoVienTd.textContent = row.GiaoVien || '';
      tableRow.appendChild(giaoVienTd);

      const moiGiangTd = document.createElement('td');
      // Thay thế checkbox bằng văn bản "Có" hoặc "Không"
      const inviteText = document.createElement('span');
      inviteText.textContent = row.MoiGiang ? 'Có' : 'Không';
      moiGiangTd.appendChild(inviteText);
      tableRow.appendChild(moiGiangTd);

      const giaoVienGiangDayTd = document.createElement('td');
      // Chuyển ô input giảng viên thành dạng xem
      const giaoVienGiangDayView = document.createElement('span');
      giaoVienGiangDayView.textContent = row.GiaoVienGiangDay || '';
      giaoVienGiangDayTd.appendChild(giaoVienGiangDayView);
      tableRow.appendChild(giaoVienGiangDayTd);

      const khoaTd = document.createElement('td');
      khoaTd.textContent = row.Khoa || ''; // Lấy giá trị Khoa trực tiếp từ row
      tableRow.appendChild(khoaTd);

      const boMonTd = document.createElement('td'); // Tạo ô Bộ môn
      const boMonInput = document.createElement('span'); // Tạo span cho Bộ môn
      boMonInput.textContent = row.BoMon || ''; // Lấy giá trị từ row
      boMonTd.appendChild(boMonInput); // Thêm span vào ô
      tableRow.appendChild(boMonTd);

      const soTietLLTd = document.createElement('td');
      soTietLLTd.textContent = row.LL || '';
      tableRow.appendChild(soTietLLTd);

      const soTietQCTd = document.createElement('td');
      soTietQCTd.textContent = row.QuyChuan || '';
      tableRow.appendChild(soTietQCTd);

      // Điều kiện để ẩn checkbox của "Khoa" nếu role không phải là "CNTT_ALL"
      const role = localStorage.getItem("userRole");
      const MaPhongBan = localStorage.getItem("MaPhongBan")


      if (MaPhongBan == 'DAOTAO' && role == 'Duyệt') {
        // Checkbox cho Khoa
        const khoaCheckboxTd = document.createElement('td');
        const khoaCheckbox = document.createElement('input');
        khoaCheckbox.type = 'checkbox';
        khoaCheckbox.name = 'khoa'; // Thêm thuộc tính name
        khoaCheckbox.checked = row.KhoaDuyet || false; // Dùng một trường cho checkbox
        khoaCheckbox.onchange = () => updateCheckAll('khoa'); // Gọi hàm khi checkbox thay đổi
        khoaCheckboxTd.appendChild(khoaCheckbox);
        tableRow.appendChild(khoaCheckboxTd);

        // Checkbox cho Đào Tạo
        const daoTaoCheckboxTd = document.createElement('td');
        const daoTaoCheckbox = document.createElement('input');
        daoTaoCheckbox.type = 'checkbox';
        daoTaoCheckbox.name = 'daoTao'; // Thêm thuộc tính name
        daoTaoCheckbox.checked = row.DaoTaoDuyet || false; // Dùng một trường cho checkbox
        daoTaoCheckbox.onchange = () => updateCheckAll('daoTao'); // Gọi hàm khi checkbox thay đổi
        daoTaoCheckboxTd.appendChild(daoTaoCheckbox);
        tableRow.appendChild(daoTaoCheckboxTd);
      } else if (MaPhongBan == 'TAICHINH' && role == "Duyệt") {
        // Checkbox cho Đào Tạo
        const daoTaoCheckboxTd = document.createElement('td');
        const daoTaoCheckbox = document.createElement('input');
        daoTaoCheckbox.type = 'checkbox';
        daoTaoCheckbox.name = 'daoTao'; // Thêm thuộc tính name
        daoTaoCheckbox.checked = row.DaoTaoDuyet || false; // Dùng một trường cho checkbox
        daoTaoCheckbox.onchange = () => updateCheckAll('daoTao'); // Gọi hàm khi checkbox thay đổi
        daoTaoCheckboxTd.appendChild(daoTaoCheckbox);
        tableRow.appendChild(daoTaoCheckboxTd);

        // Checkbox cho Tài Chính
        const taiChinhCheckboxTd = document.createElement('td');
        const taiChinhCheckbox = document.createElement('input');
        taiChinhCheckbox.type = 'checkbox';
        taiChinhCheckbox.name = 'taiChinh'; // Thêm thuộc tính name
        taiChinhCheckbox.checked = row.TaiChinhDuyet || false; // Dùng một trường cho checkbox
        taiChinhCheckbox.onchange = () => updateCheckAll('taiChinh'); // Gọi hàm khi checkbox thay đổi
        taiChinhCheckboxTd.appendChild(taiChinhCheckbox);
        tableRow.appendChild(taiChinhCheckboxTd);
      }
      tableBody.appendChild(tableRow);
    });
  }

  async function submitData() {
    const role = localStorage.getItem("userRole")
    const MaPhongBan = localStorage.getItem("MaPhongBan");
    const rows = document.querySelectorAll('#tableBody tr'); // Lấy tất cả các hàng trong bảng

    rows.forEach((row, index) => {
      // Bỏ qua các hàng đang bị ẩn
      if (row.style.display === 'none') {
        return;
      }

      // Lấy giá trị của checkbox "Khoa", "Đào Tạo", và "Tài Chính"
      const khoaCheckbox = row.querySelector('input[type="checkbox"][name="khoa"]');
      const daoTaoCheckbox = row.querySelector('input[type="checkbox"][name="daoTao"]');
      const taiChinhCheckbox = row.querySelector('input[type="checkbox"][name="taiChinh"]'); // Lấy checkbox Tài Chính

      // Lấy trạng thái của checkbox "Đào Tạo"
      const daoTaoDuyet = daoTaoCheckbox ? daoTaoCheckbox.checked : false;

      // Biến để lưu trạng thái
      let khoaDuyet = false; // Khởi tạo biến để lưu trạng thái checkbox "Khoa"
      let taiChinhDuyet = false; // Khởi tạo biến để lưu trạng thái checkbox "Tài Chính"

      if (role == 'DAOTAO' && role == 'Duyệt') {
        // Khi role là DAOTAO_ALL
        khoaDuyet = khoaCheckbox ? khoaCheckbox.checked : false; // Cập nhật Khoa
        taiChinhDuyet = false; // Tài Chính sẽ luôn là false
      } else if (role == 'TAICHINH' && role == 'Duyệt') {
        // Khi role là TAICHINH_ALL
        khoaDuyet = globalData[index].KhoaDuyet; // Giữ nguyên giá trị cũ của Khoa
        taiChinhDuyet = taiChinhCheckbox ? taiChinhCheckbox.checked : false; // Cập nhật Tài Chính
      }

      // Cập nhật vào mảng globalData tương ứng với chỉ mục hàng (index)
      globalData[index].KhoaDuyet = khoaDuyet; // Cập nhật Khoa
      globalData[index].DaoTaoDuyet = daoTaoDuyet; // Cập nhật Đào Tạo
      globalData[index].TaiChinhDuyet = taiChinhDuyet; // Cập nhật Tài Chính
    });

    // Gửi dữ liệu lên server
    fetch('http://localhost:3000/check-teaching', {
      method: 'POST', // Phương thức POST
      headers: {
        'Content-Type': 'application/json' // Định dạng gửi là JSON
      },
      body: JSON.stringify(globalData) // Chuyển đổi globalData thành chuỗi JSON
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Lỗi khi gửi dữ liệu');
        }
        return response.json(); // Chuyển đổi phản hồi thành JSON
      })
      .then(data => {
        // console.log('Dữ liệu phản hồi từ server:', data);
        alert(data.message);
      })
      .catch(error => {
        console.error('Có lỗi xảy ra:', error);
        alert('Có lỗi xảy ra khi cập nhật dữ liệu.');
      });
  }

  // Phương
  async function submitData2() {
    fetch('/submitData2', {
      method: 'POST', // Dùng POST nếu bạn muốn gửi tín hiệu theo yêu cầu HTTP POST
      //headers: {
      //  'Content-Type': 'application/json'
      //}
    })
      .then(response => response.json())
      .then(data => {
        alert('Lưu dữ liệu thành công!');
        // Xử lý phản hồi từ server, ví dụ: hiển thị thông báo thành công
      })
      .catch((error) => {
        console.error('Error sending signal:', error);
        // Xử lý lỗi, ví dụ: hiển thị thông báo lỗi
      });
  }
  // Phương

  function filterByName() {
    const input = document.getElementById('filterName');
    const filter = input.value.toLowerCase();
    const tableRows = document.querySelectorAll('#tableBody tr');

    // Nếu ô tìm kiếm trống, hiển thị tất cả các dòng
    if (!filter) {
      tableRows.forEach(row => {
        row.style.display = ''; // Hiện tất cả các dòng
        const checkbox = row.querySelector('input[type="checkbox"]');
        checkbox.disabled = false; // Kích hoạt checkbox
      });
      return;
    }

    // Chỉ hiện các dòng có tên giảng viên khớp với giá trị tìm kiếm
    tableRows.forEach(row => {
      const nameCell = row.querySelector('td:nth-child(3)'); // Giả sử tên giảng viên nằm ở cột thứ 5
      const name = nameCell.textContent.toLowerCase();
      const checkbox = row.querySelector('input[type="checkbox"]');

      if (name.includes(filter)) {
        row.style.display = ''; // Hiện hàng nếu khớp
        checkbox.disabled = false; // Kích hoạt checkbox
      } else {
        row.style.display = 'none'; // Ẩn hàng nếu không khớp
        checkbox.disabled = true; // Vô hiệu hóa checkbox
      }
    });
  }

  function filterByClass() {
    const input = document.getElementById('filterClass');
    const filter = input.value.toLowerCase();
    const tableRows = document.querySelectorAll('#tableBody tr');

    // Nếu ô tìm kiếm trống, hiển thị tất cả các dòng
    if (!filter) {
      tableRows.forEach(row => {
        row.style.display = ''; // Hiện tất cả các dòng
        const checkbox = row.querySelector('input[type="checkbox"]');
        checkbox.disabled = false; // Kích hoạt checkbox
      });
      return;
    }

    // Chỉ hiện các dòng có tên giảng viên khớp với giá trị tìm kiếm
    tableRows.forEach(row => {
      const nameCell = row.querySelector('td:nth-child(1)'); // Giả sử tên giảng viên nằm ở cột thứ 5
      const name = nameCell.textContent.toLowerCase();
      const checkbox = row.querySelector('input[type="checkbox"]');

      if (name.includes(filter)) {
        row.style.display = ''; // Hiện hàng nếu khớp
        checkbox.disabled = false; // Kích hoạt checkbox
      } else {
        row.style.display = 'none'; // Ẩn hàng nếu không khớp
        checkbox.disabled = true; // Vô hiệu hóa checkbox
      }
    });
  }


  function filterByKhoa() {
    const input = document.getElementById('filterKhoa');
    const filter = input.value.toLowerCase();
    const tableRows = document.querySelectorAll('#tableBody tr');

    // Nếu ô tìm kiếm trống, hiển thị tất cả các dòng
    if (!filter) {
      tableRows.forEach(row => {
        row.style.display = ''; // Hiện tất cả các dòng
        const checkbox = row.querySelector('input[type="checkbox"]');
        checkbox.disabled = false; // Kích hoạt checkbox
      });
      return;
    }

    // Chỉ hiện các dòng có tên giảng viên khớp với giá trị tìm kiếm
    tableRows.forEach(row => {
      const nameCell = row.querySelector('td:nth-child(6)'); // Giả sử tên giảng viên nằm ở cột thứ 5
      const name = nameCell.textContent.toLowerCase();
      const checkbox = row.querySelector('input[type="checkbox"]');

      if (name.includes(filter)) {
        row.style.display = ''; // Hiện hàng nếu khớp
        checkbox.disabled = false; // Kích hoạt checkbox
      } else {
        row.style.display = 'none'; // Ẩn hàng nếu không khớp
        checkbox.disabled = true; // Vô hiệu hóa checkbox
      }
    });
  }


  // Hàm tính tổng số tiết từ globalData
  function calculateTotals() {
    totalLL = 0; // Reset tổng số tiết LL
    totalQC = 0; // Reset tổng số tiết QC

    // Duyệt qua từng phần tử trong globalData để cộng dồn số tiết
    globalData.forEach(item => {
      totalLL += item.LL; // Cộng dồn số tiết LL
      totalQC += item.QuyChuan; // Cộng dồn số tiết QC
    });

    // Cập nhật tổng số tiết vào HTML
    document.getElementById('totalLL').textContent = totalLL;
    document.getElementById('totalQC').textContent = totalQC;
  }


  function checkAll(type) {
    const checkboxes = document.querySelectorAll(`input[type="checkbox"][name="${type}"]`);
    const checkAllCheckbox = document.getElementById(`checkAll${type.charAt(0).toUpperCase() + type.slice(1)}`);

    checkboxes.forEach(checkbox => {
      checkbox.checked = checkAllCheckbox.checked; // Gán trạng thái checkbox "Check All" cho tất cả các checkbox
    });
  }

  // Hàm để cập nhật trạng thái của checkbox "Check All" khi checkbox cá nhân được chọn
  function updateCheckAll(type) {
    const checkboxes = document.querySelectorAll(`input[type="checkbox"][name="${type}"]`);
    const checkAllCheckbox = document.getElementById(`checkAll${type.charAt(0).toUpperCase() + type.slice(1)}`);

    // Kiểm tra nếu tất cả checkbox cá nhân đều được chọn
    const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);
    checkAllCheckbox.checked = allChecked; // Cập nhật trạng thái của checkbox "Check All"
  }


  // Hàm khởi động ứng dụng
  init();
</script>

<script>
  window.onload = function () {
    //const duyet = process.env.DUYET;
    //const thuong = process.end.THUONG;
    const role = localStorage.getItem("userRole")
    const MaPhongBan = localStorage.getItem("MaPhongBan")


    if (MaPhongBan == 'DAOTAO' && role == 'Duyệt') {
      // Ẩn cột 'taiChinhColumn'
      console.log("đào tạo")
      document.getElementById('taiChinhColumn').style.display = 'none';
      document.getElementById('update-qc').style.display = 'inline-block'; // Sử dụng 'inline-block' để hiển thị nút
    } else if (MaPhongBan == 'TAICHINH' && role == duyet) {
      // Ẩn cột 'khoaColumn'
      console.log("tài chính")
      document.getElementById('khoaColumn').style.display = 'none';
      document.getElementById('update-qc').style.display = 'inline-block'; // Sử dụng 'inline-block' để hiển thị nút
      // Hiển thị nút 'Cập nhật'
      document.getElementById('save-data-all').style.display = 'inline-block'; // Sử dụng 'inline-block' để hiển thị nút
    } else if (role == 'Thường') {
      // Ẩn tất cả các cột
      document.getElementById('khoaColumn').style.display = 'none';
      document.getElementById('daoTaoColumn').style.display = 'none';
      document.getElementById('taiChinhColumn').style.display = 'none';
    }
  };
</script>

  <!-- Phần phân quyền -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Thêm sự kiện click cho phần tử có id "import"
      const importLink = document.getElementById("Import");

      importLink.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

        if (isKhoa==0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/import";
        } else { // Nếu là khoa
          window.location.href = "/importGvmList";
        }
      });

      // Thêm sự kiện click cho phần tử có id="ThongTinGD"
      const ThongTinGD = document.getElementById("ThongTinGD");

      ThongTinGD.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

        if (isKhoa==0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/info2";
        } else {
          window.location.href = "/info";
        }
      });

      // Thêm sự kiện click cho phần tử có id="Home"

      const Home = document.getElementById("Home");

      Home.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa")

        if (isKhoa==0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/maindt";
        } else {
          window.location.href = "/mainkhoa";
        }
      });
    });

  </script>

<script>
  window.onload = function () {
    const TenNhanVien = localStorage.getItem("TenNhanVien"); // Lấy tên người dùng từ localStorage
    const Role = localStorage.getItem("userRole");

    if (TenNhanVien) {
      // Hiển thị tên người dùng trên phần tử HTML
      document.querySelector('.fullname').innerText = `${TenNhanVien} - ${Role}`;
    } else {
      document.querySelector('.fullname').innerText = 'Hi, Guest'; // Hiển thị nếu không có tên người dùng
    }

    //document.querySelector('.role').innerText = `${Role}`;

  };
</script>
</body>

</html>