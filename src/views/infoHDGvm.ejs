<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Học Viện Kỹ Thuật Mật Mã</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/gvmList.css">

    <style>
        .teacher-group {
          border: 2px solid black; /* Viền đen xung quanh nhóm giảng viên */
          border-collapse: separate;
          margin-bottom: 10px;
        }
        .teacher-group td, .teacher-group th {
          padding: 8px;
          text-align: left;
          border: 2px solid black; /* Viền đen xung quanh nhóm giảng viên */

        }
      </style>
</head>
<body>
        <nav class="navbar-top ">
          <div class="container-fluid">
              <a class="navbar-brand" href="#">
                  <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo">
                  <div class="navbar-title">
                    <img src="/dongchu_banner.png" alt="banner">
                  </div>
              </a>
          </div>
      </nav>
      
      <!-- Phần dưới của navbar chứa các mục nằm ngang -->
      <nav class="navbar navbar-expand-lg navbar-bottom sticky-top">
          <div class="container-fluid">
              <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                  <span class="navbar-toggler-icon"></span>
              </button>
              <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
                  <ul class="navbar-nav">
                    <li class="nav-item">
                      <a class="nav-link" onclick="Home()" href="">HOME</a>
                    </li>

                    <li class="nav-item">
                      <a class="nav-link" onclick="ThongTinGD()" href="">Thông tin GD</a>
                    </li>
                    <!-- <li> -->
                    <li class="nav-item"> 
                      <!-- <a class="nav-link" href="/import">Import danh sách giảng viên mời</a> -->
                      <a class="nav-link" onclick="Import()" href="">Import</a>
                    </li>
                    <!-- <li class="nav-item">
                        <a class="nav-link" href="/daotaoxemhd" role="button">Xem hợp đồng</a>
                    </li> -->
      
                    <!-- Danh sách giảng viên mời -->
                    <li class="nav-item">
                        <a  class="nav-link" href="/gvmList" role="button">Danh sách giảng viên mời</a>
                    </li>
      
                    <!-- Thông tin các lớp giảng viên mời -->
                    <li class="nav-item">
                        <a  class="nav-link " href="/classInfoGvm" role="button">Thông tin các lớp giảng viên mời</a>
                    </li>
                     <!-- Thông tin HD giảng viên mời-->
                    <li class="nav-item">
                        <a  class="nav-link active" href="/infoHDGvm" role="button"> Thông tin HD Gvm </a>
                    </li>
                    <li class="nav-item">
                      <a class="nav-link" href="/tableQC">Bảng quy chuẩn</a>
                    </li>
                      <div class="navbar-nav">
                        <div class="nav-item dropdown">
                              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown" aria-expanded="false">
                                Hi, Lê Đức Thuận
                              </a>
                              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                  <a class="dropdown-item" href="#">Thông tin cá nhân</a>
                                  <a class="dropdown-item" href="/">Đăng xuất</a>
                              </div>
                        </div>
                  </ul>
              </div>
          </div>
        </nav>

    <div class="container-fluid box m-4">
             <div class="d-flex justify-content-center">
                <!-- Main content -->
                <div class="gvmList ">
                    <div class="m-3">
                        <div class="">
                            <h1>THÔNG TIN HỢP ĐỒNG GIẢNG VIÊN MỜI</h1>
                            <div class="header-actions">
                              <!-- <button class="add-class" onclick="addClass()">+ Thêm giảng viên mời</button> -->
                              <input
                                type="text"
                                placeholder="Tìm kiếm theo Tên..."
                                class="search"
                                id="searchInput"
                                onkeyup="searchClass()"
                              />
                              <button class="action-button export" onclick="window.location.href='/hdgvm/export-excel'">
                                Xuất dữ liệu 
                              </button><script>
                              function exportSelectedData() {
                                fetch('/export-excel')
                                  .then(response => response.blob())
                                  .then(blob => {
                                    const url = URL.createObjectURL(blob);
                                    const a = document.createElement('a');
                                    a.href = url;
                                    a.download = 'hdgvmList.xlsx';
                                    a.click();
                                  });
                              }</script>
                              <select class="filter" onchange="filterClasses()">
                                <option value="">Công nghệ thông tin</option>
                                <option value="">An toàn thông tin</option>
                                <option value="">Điện tử viễn thông</option>
                                <option value="">Mật mã</option>
                                <!-- Các tùy chọn lọc khác -->
                            
                      
                         
    <script src="/bootstrap/dist/js/jquery-3.7.1.min.js"></script>
    <script src="/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Tìm kiếm giảng viên mời theo tên
function searchClass() {
    let input = document.getElementById("searchInput").value.toLowerCase();
    let table = document.getElementById("classTable");
    let tr = table.getElementsByTagName("tr");
  
    for (let i = 1; i < tr.length; i++) {
      let td = tr[i].getElementsByTagName("td")[1];
      if (td) {
        let textValue = td.textContent || td.innerText;
        if (textValue.toLowerCase().indexOf(input) > -1) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }
  
 

  async function fetchGVMLists() {
    try {
        const response = await fetch('/api/classInfoGvm');
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        const gvmLists = await response.json();
        return gvmLists;
    } catch (error) {
        console.error('Error fetching data:', error);
    }
  }
 

 async function viewClass( index) {

  gvmLists = await fetchGVMLists();

  index = parseInt(index);

  var gvm = gvmLists[index];
  
  
  // Hiển thị thông tin vào modal
document.getElementById('modal-ma-gv').innerText = gvm.MaGvm;
document.getElementById('modal-ho-ten').innerText = gvm.HoTen;
document.getElementById('modal-ngay-sinh').innerText = new Date(gvm.NgaySinh).toLocaleDateString('vi-VN');
document.getElementById('modal-cccd').innerText = gvm.CCCD;
document.getElementById('modal-ngay-cap').innerText = new Date(gvm.NgayCapCCCD).toLocaleDateString('vi-VN');
document.getElementById('modal-noi-cap').innerText = gvm.NoiCapCCCD;
document.getElementById('modal-dia-chi-cccd').innerText = gvm.DiaChi;
document.getElementById('modal-so-tk').innerText = gvm.STK;
document.getElementById('modal-ngan-hang').innerText = gvm.NganHang;
document.getElementById('modal-email').innerText = gvm.Email;
document.getElementById('modal-heso-luong').innerText = gvm.HSL;//
document.getElementById('modal-noi-cong-tac').innerText = gvm.NoiCongTac;
document.getElementById('modal-chuc-vu').innerText = gvm.ChucVu;
document.getElementById('modal-ma-so-thue').innerText = gvm.MaSoThue;
document.getElementById('modal-tot-nghiep-loai').innerText = gvm.TotNghiepLoai;

  // Hiển thị modal
  document.getElementById('modal').style.display = 'flex';
}
  

  
  // Đóng modal
  function closeModal() {
    document.getElementById("modal").style.display = "none";
  }
  
  // Thêm sự kiện khi nhấn ra ngoài modal để đóng modal
  window.onclick = function (event) {
    let modal = document.getElementById("modal");
    if (event.target == modal) {
      modal.style.display = "none";
    }
  };
  
    </script>

    <script>
      // Lấy query string từ URL
      const urlParams = new URLSearchParams(window.location.search);
      const message = urlParams.get('message');
      
      // Lấy phần tử div để hiển thị thông báo
      const messageDiv = document.getElementById('message');

     // console.log(message)
      // Hiển thị thông báo dựa trên giá trị của message
      if (message === 'insertSuccess') {
        alert("Update Success")
      } else if (message === 'insertFalse') {
        alert("Update False")
      }

        // Sau khi hiển thị thông báo, xóa query string để tránh hiển thị lại khi refresh
if (message) {
  // Sử dụng window.history để xóa query string mà không refresh lại trang
  const newUrl = window.location.origin + window.location.pathname;
  window.history.replaceState({}, document.title, newUrl);
}

    </script>


      <!-- Phần phân quyền -->
  <script>
    async function fetchRole() {
        try {
            const response = await fetch('/api/getRole');
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const role = await response.json();
            return role;
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    }

    async function ThongTinGD(){
        const role = await fetchRole();
        
        if (role.includes("CNTT")){
            window.location.href = "/info"; // Chuyển hướng đến trang mong muốn
        } else if (role.includes("DAOTAO")){
            window.location.href = "/info2"; // Chuyển hướng đến trang mong muốn
        }  // thêm quyền vào đây
    }

    async function Import(){
      const role = await fetchRole();

      if (role.includes("CNTT")){
          window.location.href = "/importGvmList"; // Chuyển hướng đến trang mong muốn
      } else if (role.includes("DAOTAO")){
          window.location.href = "/import"; // Chuyển hướng đến trang mong muốn
      }  // thêm quyền vào đây
  }

  async function Home(){
    const role = await fetchRole();

    if (role.includes("CNTT")){
        window.location.href = "/mainkhoa"; // Chuyển hướng đến trang mong muốn
    } else if (role.includes("DAOTAO")){
        window.location.href = "/maindt"; // Chuyển hướng đến trang mong muốn
    }  // thêm quyền vào đây
  }

   </script>
</body>
</html>

