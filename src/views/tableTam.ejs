<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
  <link rel="stylesheet" href="/css/styles.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
  <style>
    /* CSS cho bảng */
    .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    .table th,
    .table td {
      padding: 10px;
      text-align: left;
      border: 1px solid #dee2e6;
    }

    .table th {
      background-color: #007bff;
      color: white;
      font-weight: bold;
    }

    .table tbody tr:nth-child(even) {
      background-color: #f8f9fa;
    }

    .table tbody tr:hover {
      background-color: #e2e6ea;
    }

    .table td {
      vertical-align: middle;
    }

    .bg-custom {
      background-color: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .spinner-border {
      position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: 1000;
    }

    .header-actions {
      display: flex;
      /* Flexbox container */
      flex-wrap: wrap;
      /* Wrap items if they don't fit in one line */
      align-items: center;
      /* Vertically center items */
      gap: 10px;
      /* Space between the elements */
      justify-content: space-between;
    }

    .right {
      margin-top: 20px;
    }
  </style>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const MaPhongBan = localStorage.getItem("MaPhongBan");
      const role = localStorage.getItem("userRole");
      // Nếu
      if (MaPhongBan != "DAOTAO" || role == "Thường") {
        document.getElementById("ban-hanh").style.visibility = "hidden";
        document.getElementById("quychuandukien").style.visibility = "hidden";
        document.getElementById("xoa-qc-du-kien").style.visibility = "hidden";
      }
    });
  </script>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
  <nav class="navbar-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">
        <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo" />
        <div class="navbar-title">
          <img src="/dongchu_banner.png" alt="banner" />
        </div>
      </a>
    </div>
  </nav>

  <!-- Phần dưới của navbar chứa các mục nằm ngang -->
  <nav class="navbar navbar-expand-lg navbar-bottom sticky-top">
    <div class="" style="width: 100%">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" style="width: 100%" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" id="Home" href=""><i class="fa-solid fa-house"></i></a>
          </li>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Giảng Viên Mời
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/gvmList">Danh sách giảng viên mời</a>
                <a class="nav-link" id="actionButton1" href="/importGvmList">Thêm giảng viên mời bằng file</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle active" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Bảng Quy Chuẩn
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/import" id="actionButton2" style="width: 100%;">Thêm file quy chuẩn</a>
                <a class="nav-link active" href="/tableTam">Bảng quy chuẩn dự kiến</a>
                <a class="nav-link" href="/tableQC">Bảng quy chuẩn chính thức</a>
                <a class="nav-link" id="ThongTinGD" href="">Thông tin giảng viên theo lớp</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Mời Giảng
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/xemCacLopGvm">Xem các lớp mời</a>

                <a class="nav-link" href="/classInfoGvm">Thông tin lớp giảng viên mời</a>
                <a class="nav-link" href="/infoHDGvm" role="button">Thông tin hợp đồng</a>
                <li class="nav-item"></li>
                <a class="nav-link " href="/phuLucHD">Phụ lục hợp đồng</a>
                </li>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Vượt Giờ
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Nghiên Cứu Khoa Học
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Đồ Án
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Thống Kê
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>

          </div>
        </ul>
        <div class="navbar-nav">
          <div class="nav-item dropdown">
            <a class="nav-link dropdown-toggle fullname" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
              aria-expanded="false">
              Hi, Lê Đức Thuận
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
              <a class="dropdown-item" href="#">Thông tin cá nhân</a>
              <a class="dropdown-item" id="changePasswordLink">Đổi mật khẩu</a>
              <a class="dropdown-item" href="/">Đăng xuất</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <div class="container-fluid my-4">
    <div class="mx-5 flex-grow-1">
      <div class="header-actions">
        <div class="left">
          <button class="btn btn-outline-primary button" id="ban-hanh">
            Ban Hành
          </button>
          <button class="btn btn-outline-primary button" id="quychuandukien">
            Thêm bảng quy chuẩn
          </button>
          <!-- <select class="selectop" id="xoa-qc-du-kien">
            <option style="display: none;">Xóa</option>
            <option value="ALL">Xóa tất cả</option>
            <option value="CNTT">Xóa dữ liệu khoa CNTT</option>
            <option value="ATTT">Xóa dữ liệu khoa ATTT</option>
            <option value="DTVT">Xóa dữ liệu khoa DTVT</option>
            <option value="MM">Xóa dữ liệu khoa MM</option>
          </select> -->
        </div>

        <!-- <button class="btn btn-outline-primary button">
          <a href="/import">Thêm bảng quy chuẩn</a>
        </button> -->
        <div class="right">
          <div class="loc" style="margin-top: -15px">
            <select class="selectop " id="combobox-dot">
              <option value="1">Đợt 1</option>
              <option value="2">Đợt 2</option>
            </select>

            <!-- Combo box kì -->
            <select class="selectop " id="combobox-ki">
              <option value="1">Kỳ 1</option>
              <option value="2">Kỳ 2</option>
            </select>

            <!-- Combo box Năm -->
            <select class="selectop " id="NamHoc">
              <option value="">Chọn năm học</option>
            </select>
            <select class="selectop" id="departmentFilter">
              <option value="">Chọn khoa</option>
            </select>
            <!-- <button class="export" onclick="exportSelectedData()">Xuất dữ liệu</button> -->

            <button class="button text-nowrap" id="render" style="margin-top: 17px" onclick="filterTable()">
              Lọc
            </button>

            <button class="button text-nowrap" id="xoa-qc-du-kien" style="margin-top: 17px">
              Xóa
            </button>

          </div>
        </div>
      </div>

      <div>
        <table class="table table-bordered">
          <thead>
            <tr id="table-header"></tr>
          </thead>
          <tbody id="data-table-body"></tbody>
        </table>
      </div>
      <div id="no-data-message" class="text-center my-3" style="display: none">
        Không có dữ liệu để hiển thị.
      </div>
    </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    $(document).ready(function () {
      const isKhoa = localStorage.getItem("isKhoa");
      console.log('Giá trị isKhoa từ localStorage: ', isKhoa);
      hideButton();
    });

    function hideButton() {
      const isKhoa = localStorage.getItem("isKhoa");
      if (isKhoa === null) {
        console.log('Không tìm thấy giá trị isKhoa trong localStorage');
      } else {
        console.log('Giá trị isKhoa: ', isKhoa);

        const actionButton = document.getElementById('actionButton');
        const actionButton1 = document.getElementById('actionButton1');
        const actionButton2 = document.getElementById('actionButton2');

        if (actionButton1 && actionButton2) {
          if (isKhoa === "0") {
            actionButton1.style.display = 'none'; // Ẩn actionButton1 nếu isKhoa = 0
            actionButton2.style.display = 'inline-block'; // Hiện actionButton2
            console.log('Nút actionButton1 đã được ẩn, actionButton2 đã được hiển thị');
          } else {
            actionButton1.style.display = 'inline-block'; // Hiện actionButton1 nếu isKhoa khác 0
            actionButton2.style.display = 'none'; // Ẩn actionButton2
            console.log('Nút actionButton1 đã được hiển thị, actionButton2 đã được ẩn');
          }
        } else {
          console.log('Không tìm thấy các nút actionButton1 hoặc actionButton2');
        }
      }
    }
  </script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const loadingSpinner = document.createElement("div"); // Tạo spinner
      loadingSpinner.className = "spinner-border"; // Thêm lớp spinner
      loadingSpinner.role = "status"; // Đặt vai trò
      loadingSpinner.innerHTML =
        '<span class="visually-hidden">Loading...</span>'; // Thêm thông báo ẩn
      document.body.appendChild(loadingSpinner); // Thêm spinner vào body

      fetch("http://localhost:3000/bang-tam")
        .then((response) => {
          if (!response.ok) {
            throw new Error(
              "Network response was not ok: " + response.statusText
            );
          }
          return response.json();
        })
        .then((data) => {
          if (data.length === 0) {
            document.getElementById("no-data-message").style.display =
              "block"; // Hiển thị thông báo nếu không có dữ liệu
          } else {
            let tableHtml = "";
            const headersMap = {
              Khoa: "Khoa",
              Dot: "Đợt",
              Ki: "Kì",
              Nam: "Năm",
              GiaoVien: "Giảng viên theo TKB",
              GiaoVienGiangDay: "Giảng viên giảng dạy",
              MoiGiang: "Mời giảng?",
              SoTinChi: "Số tín chỉ",
              LopHocPhan: "Lớp học phần",
              LL: "LL",
              SoTietCTDT: "Số tiết CTĐT",
              HeSoT7CN: "Hệ số ngoài giờ",
              SoSinhVien: "Số sinh viên",
              HeSoLopDong: "Hệ số lớp đông",
              QuyChuan: "Quy chuẩn",
              GhiChu: "Ghi chú",
            };

            const headers = Object.keys(data[0]);
            headers.forEach((header) => {
              const newHeaderName = headersMap[header] || header;
              tableHtml += `<th>${newHeaderName}</th>`;
            });

            document.getElementById("table-header").innerHTML = tableHtml;

            data.forEach((item) => {
              const row = headers
                .map(
                  (key) => `<td>${item[key] !== null ? item[key] : ""}</td>`
                )
                .join("");
              document.getElementById(
                "data-table-body"
              ).innerHTML += `<tr>${row}</tr>`;
            });
          }
          loadingSpinner.remove(); // Xóa spinner sau khi hoàn thành
        })
        .catch((error) => {
          console.error("Error fetching data:", error);
          alert("Có lỗi xảy ra khi gọi API: " + error.message);
          loadingSpinner.remove(); // Xóa spinner nếu có lỗi
        });
    });

    // Thêm sự kiện cho nút lọc
    document.getElementById("filter").addEventListener("click", function () {
      const rows = document.querySelectorAll("#data-table-body tr");
      rows.forEach((row) => {
        const cells = row.getElementsByTagName("td");
        const moiGiang = cells[2].textContent; // Giả sử "Mời giảng" là cột thứ 3 (index 2)
        if (moiGiang !== "1") {
          row.style.display = "none"; // Ẩn hàng nếu "Mời giảng" không bằng 1
        } else {
          row.style.display = ""; // Hiện hàng nếu "Mời giảng" bằng 1
        }
      });
    });
  </script>

  <!-- phần xóa bảng quy chuẩn dự kiến -->
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      document.getElementById('xoa-qc-du-kien').addEventListener('click', async function () {

        let Dot = document.getElementById("combobox-dot").value;
        let Ki = document.getElementById("combobox-ki").value;
        let Nam = document.getElementById("NamHoc").value;
        let Khoa = document.getElementById("departmentFilter").value;

        const body = { Khoa, Dot, Ki, Nam };
        console.log(body);

        // Hiển thị hộp thoại xác nhận
        const confirmation = confirm(`Xóa dữ liệu của Khoa ${Khoa} Đợt ${Dot} Kì ${Ki} Năm ${Nam}`);

        if (confirmation) { // Nếu người dùng chọn OK
          try {
            // Gọi tới API để xóa dữ liệu
            const response = await fetch('http://localhost:3000/xoa-qcdk', { // Đường dẫn tới API của bạn
              method: 'POST', // Phương thức HTTP
              headers: {
                'Content-Type': 'application/json', // Định dạng dữ liệu
              },
              body: JSON.stringify(body) // Gửi Khoa trong body
            });

            // Kiểm tra xem yêu cầu có thành công không
            if (response.ok) {
              const result = await response.json(); // Chuyển đổi phản hồi sang JSON
              alert(result.message); // Hiển thị thông báo thành công
            } else {
              const errorData = await response.json(); // Lấy thông tin lỗi
              alert(`Lỗi: ${errorData.message}`); // Hiển thị thông báo lỗi
            }
          } catch (error) {
            console.error('Đã xảy ra lỗi:', error);
            alert('Đã xảy ra lỗi khi gọi API.'); // Hiển thị thông báo lỗi cho người dùng
          }
        } else {
          // Nếu người dùng chọn Cancel
          alert('Đã hủy yêu cầu xóa dữ liệu.'); // Thông báo đã hủy
        }
      });
    });
  </script>

  <script>
    let dataQC = [];

    // Hàm fetch lần đầu để lấy dữ liệu từ server
    async function fetchData() {
      try {
        const response = await fetch("http://localhost:3000/get-table-tam");
        if (!response.ok) {
          throw new Error("Lấy dữ liệu thất bại");
        }
        const data = await response.json();
        dataQC = data; // Lưu dữ liệu vào dataQC
        console.log("Dữ liệu lấy được:", dataQC);
      } catch (error) {
        console.error("Error:", error);
        alert("Lấy dữ liệu thất bại!");
      }
    }

    document
      .getElementById("ban-hanh")
      .addEventListener("click", async function () {
        await fetchData(); // Gọi để lấy dữ liệu trước

        // Sau khi lấy dữ liệu, gửi dữ liệu đã cập nhật đến server
        console.log("Dữ liệu sẽ được gửi:", dataQC);

        fetch("http://localhost:3000/ban-hanh", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(dataQC), // Gửi dữ liệu đã được cập nhật
        })
          .then((response) => response.json()) // Phân tích phản hồi JSON từ server
          .then((data) => {
            if (data.success) {
              alert(data.message || "Ban hành thành công!"); // Hiển thị thông báo từ server
            } else {
              alert(data.message || "Ban hành thất bại!");
            }
          })
          .catch((error) => {
            alert("Gửi dữ liệu thất bại!");
            console.error("Error:", error);
          });
      });
  </script>

  <!-- Phần phân quyền -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const importQuyChuan = document.getElementById("quychuandukien");
      const MaPhongBan = localStorage.getItem("MaPhongBan");
      const role = localStorage.getItem("userRole");

      importQuyChuan.addEventListener("click", function (event) {
        window.location.href = "/import";
      });


      // Thêm sự kiện click cho phần tử có id="ThongTinGD"
      const ThongTinGD = document.getElementById("ThongTinGD");

      ThongTinGD.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

        if (isKhoa == 0) {
          // Nếu là đào tạo hoặc tài chính
          window.location.href = "/info2";
        } else {
          window.location.href = "/info";
        }
      });

      // Thêm sự kiện click cho phần tử có id="Home"

      const Home = document.getElementById("Home");

      Home.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa");

        if (isKhoa == 0) {
          // Nếu là đào tạo hoặc tài chính
          window.location.href = "/maindt";
        } else {
          window.location.href = "/mainkhoa";
        }
      });
    });
  </script>

  <script>
    window.onload = function () {
      const TenNhanVien = localStorage.getItem("TenNhanVien"); // Lấy tên người dùng từ localStorage
      const Role = localStorage.getItem("userRole");

      if (TenNhanVien) {
        // Hiển thị tên người dùng trên phần tử HTML
        document.querySelector(
          ".fullname"
        ).innerText = `${TenNhanVien} - ${Role}`;
      } else {
        document.querySelector(".fullname").innerText = "Hi, Guest"; // Hiển thị nếu không có tên người dùng
      }

      document.querySelector(".role").innerText = `${Role}`;
    };
  </script>
  <script>
    function filterTable() {
      // Lấy giá trị đã chọn từ các combobox
      let dot = document.getElementById("combobox-dot").value;
      let ki = document.getElementById("combobox-ki").value;
      let nam = document.getElementById("NamHoc").value;
      let department = document
        .getElementById("departmentFilter")
        .value.trim();

      let tbody = document.getElementById("data-table-body");
      let rows = tbody.getElementsByTagName("tr");

      for (let i = 0; i < rows.length; i++) {
        let row = rows[i];
        let cells = row.getElementsByTagName("td");

        // Giả sử thứ tự cột là: Khoa, Đợt, Kì, Năm
        let rowDepartment = cells[0].textContent.trim(); // Khoa
        let rowDot = cells[1].textContent.trim(); // Đợt
        let rowKi = cells[2].textContent.trim(); // Kì
        let rowNam = cells[3].textContent.trim(); // Năm

        // Logic lọc
        let matchesDepartment =
          department === "" || rowDepartment === department;
        let matchesDot = dot === "" || rowDot === dot;
        let matchesKi = ki === "" || rowKi === ki;
        let matchesNam = nam === "" || rowNam === nam; // Kiểm tra năm

        // Hiển thị hoặc ẩn hàng dựa trên kết quả lọc
        if (matchesDepartment && matchesDot && matchesKi && matchesNam) {
          row.style.display = ""; // Hiển thị hàng
        } else {
          row.style.display = "none"; // Ẩn hàng
        }
      }
    }
  </script>
  <script>
    document.getElementById("changePasswordLink").addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage
      alert(tenDangNhap);

      if (tenDangNhap) {
        // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
        window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
      } else {
        alert("Không tìm thấy TenDangNhap trong localStorage.");
      }
    });
  </script>
  <script>
    $(document).ready(function() {
  $('#NamHoc option[value=""]').remove();

  $.ajax({
    url: '/getNamHoc',
    method: 'GET',
    success: function(response) {
      if (response.success) {
        const NamHoc = response.NamHoc;
        console.log(NamHoc);

        response.NamHoc.forEach(function(item) {
          if (item.NamHoc === NamHoc) {
            $('#NamHoc').prepend(
              `<option value="${item.NamHoc}" selected>${item.NamHoc}</option>`
            );
          } else {
            $('#NamHoc').append(
              `<option value="${item.NamHoc}">${item.NamHoc}</option>`
            );
          }
        });

        if (!$('#NamHoc option:selected').length) {
          $('#NamHoc').prepend('<option value="">Chọn Năm Học</option>');
        }
      } else {
        console.error("Không lấy được dữ liệu năm học:", response.message);
      }
    },
    error: function(error) {
      console.error("Lỗi khi lấy dữ liệu năm học:", error);
    }
  });
});
</script>
<script>
  $(document).ready(function() {
      $('#departmentFilter option[value=""]').remove();
    // Gọi AJAX để lấy dữ liệu JSON từ API
    $.ajax({
      url: '/getPhongBan', // Đường dẫn tới API getPhongBan
      method: 'GET',
      success: function(response) {
        // Kiểm tra nếu response thành công
        const MaPhongBan = response.MaPhongBan;
        if (response.success) {
          $('#departmentFilter').prepend('<option value="ALL">Tất cả khoa</option>');
          // Lặp qua từng mục trong mảng MaPhongBan
          response.MaPhongBan.forEach(function(item) {
            // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
            console.log(item);
              $('#departmentFilter').append(
                `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
              );
            }
          );

          // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
          if (!$('#departmentFilter option:selected').length) {
            $('#departmentFilter').prepend('<option value="">Chọn Phòng Ban</option>');
          }
        } else {
          console.error("Không lấy được dữ liệu phongBan:", response.message);
        }
      },
      error: function(error) {
        console.error("Lỗi khi lấy dữ liệu phongBan:", error);
      }
    });
  });
</script>
</body>

</html>