<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Học Viện Kỹ Thuật Mật Mã</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/gvmList.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <style>
    .teacher-group {
      border: 2px solid black;
      /* Viền đen xung quanh nhóm giảng viên */
      border-collapse: separate;
      margin-bottom: 10px;
    }

    .teacher-group td,
    .teacher-group th {
      padding: 8px;
      text-align: left;
      border: 2px solid black;
      /* Viền đen xung quanh nhóm giảng viên */

    }

    .suggestions {
      position: absolute;
      /* Đảm bảo gợi ý nằm bên trên các thành phần khác */
      top: calc(100% + 5px);
      /* Đặt gợi ý phía trên input với một khoảng cách */
      font-size: 12px;
      left: 0;
      background-color: #f0f0f0;
      color: #000;
      border: 1px solid #ccc;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      /* Đảm bảo gợi ý nằm trên các thành phần khác */
      border-radius: 4px;
      max-height: 300px;
      overflow-y: auto;
    }

    /* Hiệu ứng lung linh khi hover */
    .suggestions:hover {
      background-color: #e0e0e0;
      /* Thay đổi màu nền khi hover */
      box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
      /* Tăng độ bóng khi hover */
    }


    /* CSS cho từng mục gợi ý */
    .suggestion-item {
      padding: 8px 12px;
      /* Khoảng cách bên trong từng mục */
      cursor: pointer;
      /* Con trỏ chuột thay đổi khi hover */
      transition: background-color 0.2s ease;
      /* Tạo hiệu ứng chuyển đổi mượt mà khi hover */
    }

    /* Hiệu ứng khi người dùng di chuột vào mục gợi ý */
    .suggestion-item:hover {
      background-color: #f0f0f0;
      /* Màu nền khi hover */
    }

    /* Đặt lại một số thuộc tính khi input mất focus */
    input:focus+.suggestions {
      display: block;
      /* Đảm bảo khung hiển thị khi input được focus */
    }

    /* Đảm bảo container gợi ý không bị tràn ra ngoài khung nếu có */
    .suggestions {
      overflow: hidden;
    }
  </style>
</head>

<body>
  <nav class="navbar-top ">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">
        <img src="/Logo-Hoc-Vien-Ky-Thuat-Mat-Ma-ACTVN.webp" alt="Logo">
        <div class="navbar-title">
          <img src="/dongchu_banner.png" alt="banner">
        </div>
      </a>
    </div>
  </nav>

  <!-- Phần dưới của navbar chứa các mục nằm ngang -->

  <nav class="navbar navbar-expand-lg navbar-bottom sticky-top">
    <div class="" style="width: 100%;">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" id="Home" href=""><i class="fa-solid fa-house"></i></a>
          </li>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Giảng Viên Mời
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/gvmList">Danh sách giảng viên mời</a>
                <a class="nav-link" id="actionButton1" href="/importGvmList" style="width: 100%;">Thêm giảng viên mời
                  bằng file</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Bảng Quy Chuẩn
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/import" id="actionButton2" style="width: 100%;">Thêm file quy chuẩn</a>
                <a class="nav-link" href="/tableTam">Bảng quy chuẩn dự kiến</a>
                <a class="nav-link" href="/tableQC">Bảng quy chuẩn chính thức</a>
                <a class="nav-link" id="ThongTinGD" href="">Thông tin giảng viên theo lớp</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle " href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Mời Giảng
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" href="/xemCacLopGvm">Xem các lớp mời</a>
                <a class="nav-link" href="/classInfoGvm">Thông tin lớp giảng viên mời</a>
                <a class="nav-link" href="/hopDongDuKien" role="button">Hợp đồng dự kiến</a>
                <a class="nav-link '" href="/infoHDGvm" role="button">Thông tin hợp đồng</a>
                <li class="nav-item"></li>
                <a class="nav-link active" href="/phulucHD">Phụ lục hợp đồng</a>
                </li>
                <a class="nav-link " href="/exportHD">Hợp Đồng</a>

              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Vượt Giờ
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Nghiên Cứu Khoa Học
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Đồ Án
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Thống Kê
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="#">COMING SOON</a>
              </div>
            </div>
          </div>
          <div class="navbar-nav">
            <div class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownUser" data-bs-toggle="dropdown"
                aria-expanded="false">
                Hệ Thống
              </a>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="nav-link" id="" href="log">Xem File Log</a>
              </div>
            </div>
          </div>
        </ul>
        <div class="navbar-nav">
          <div class="nav-item dropdown">
            <a class="nav-link dropdown-toggle fullname" href="/login" id="navbarDropdownUser" data-bs-toggle="dropdown"
              aria-expanded="false">
              Hi, Lê Đức Thuận
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
              <a class="dropdown-item" href="#">Thông tin cá nhân</a>
              <a class="dropdown-item" id="changePasswordLink">Đổi mật khẩu</a>
              <a class="dropdown-item" href="/">Đăng xuất</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>
  <div class="container mt-4">
    <div class="col-12">
      <!-- Tiêu đề -->
      <h2 class="text-center mb-4">Phụ Lục Hợp Đồng Giảng Viên</h2>

      <!-- Container chính -->
      <div class="controls-container d-flex align-items-center">
        <select class="form-select w-100px mx-2 selectop" id="combobox-dot">
          <option value="1">Đợt 1</option>
          <option value="2">Đợt 2</option>
        </select>

        <select class="form-select w-100px mx-2 selectop" id="combobox-ki">
          <option value="1">Kỳ 1</option>
          <option value="2">Kỳ 2</option>
        </select>

        <select class="form-select w-100px mx-2 selectop" id="NamHoc">
          <option value="">Năm học</option>
        </select>
        <select class="form-select w-100px mx-1 selectop" id="MaPhongBan">
          <option value="">Chọn khoa</option>
        </select>
        <input type="text" class="form-control w-200px mx-2" id="search-teacher" onclick="showSuggestionsGvm(this)" placeholder="Tìm kiếm giảng viên">

        <div class="d-flex justify-content-center">
          <!-- Nút xuất dữ liệu với style được cải thiện -->
          <button id="exportButton" class="btn btn-primary btn-lg hover-shadow">
            <i class="fas fa-file-export me-2"></i>
            Xuất dữ liệu phụ lục giảng viên mời
          </button>
        </div>
      </div>
    </div>
  </div>
  </div>
  <script>
    document.getElementById('exportButton').addEventListener('click', function() {
        const dot = document.getElementById("combobox-dot").value;
        const ki = document.getElementById("combobox-ki").value;
        const namHoc = document.getElementById("NamHoc").value;
        const khoa = document.getElementById("MaPhongBan").value;
        const teacherName = document.getElementById("search-teacher").value;

        if (!dot || !ki || !namHoc) {
            alert("Vui lòng chọn đầy đủ thông tin đợt, kỳ và năm học.");
            return;
        }

        // Tạo URL với các tham số
        let url = `/api/export-phu-luc-giang-vien-moi?dot=${encodeURIComponent(dot)}&ki=${encodeURIComponent(ki)}&namHoc=${encodeURIComponent(namHoc)}`;

        if (khoa) {
            url += `&khoa=${encodeURIComponent(khoa)}`;
        }

        if (teacherName) {
            url += `&teacherName=${encodeURIComponent(teacherName)}`;
        }

        // Chuyển hướng trực tiếp đến URL để tải file
        window.location.href = url;
    });
</script>


  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    $(document).ready(function () {
      const isKhoa = localStorage.getItem("isKhoa");
      console.log('Giá trị isKhoa từ localStorage: ', isKhoa);
      hideButton();
    });

    function hideButton() {
      const isKhoa = localStorage.getItem("isKhoa");
      if (isKhoa === null) {
        console.log('Không tìm thấy giá trị isKhoa trong localStorage');
      } else {
        console.log('Giá trị isKhoa: ', isKhoa);

        const actionButton = document.getElementById('actionButton');
        const actionButton1 = document.getElementById('actionButton1');
        const actionButton2 = document.getElementById('actionButton2');

        if (actionButton1 && actionButton2) {
          if (isKhoa === "0") {
            actionButton1.style.display = 'none'; // Ẩn actionButton1 nếu isKhoa = 0
            actionButton2.style.display = 'inline-block'; // Hiện actionButton2
            console.log('Nút actionButton1 đã được ẩn, actionButton2 đã được hiển thị');
          } else {
            actionButton1.style.display = 'inline-block'; // Hiện actionButton1 nếu isKhoa khác 0
            actionButton2.style.display = 'none'; // Ẩn actionButton2
            console.log('Nút actionButton1 đã được hiển thị, actionButton2 đã được ẩn');
          }
        } else {
          console.log('Không tìm thấy các nút actionButton1 hoặc actionButton2');
        }
      }
    }
  </script>



  <script>
    // Lấy query string từ URL
    const urlParams = new URLSearchParams(window.location.search);
    const message = urlParams.get('message');

    // Lấy phần tử div để hiển thị thông báo
    const messageDiv = document.getElementById('message');

    // console.log(message)
    // Hiển thị thông báo dựa trên giá trị của message
    if (message === 'insertSuccess') {
      alert("Update Success")
    } else if (message === 'insertFalse') {
      alert("Update False")
    }

    // Sau khi hiển thị thông báo, xóa query string để tránh hiển thị lại khi refresh
    if (message) {
      // Sử dụng window.history để xóa query string mà không refresh lại trang
      const newUrl = window.location.origin + window.location.pathname;
      window.history.replaceState({}, document.title, newUrl);
    }

  </script>


  <!-- Phần phân quyền -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {

      // Thêm sự kiện click cho phần tử có id="ThongTinGD"
      const ThongTinGD = document.getElementById("ThongTinGD");

      ThongTinGD.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa"); // Lấy role từ localStorage

        if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/info2";
        } else {
          window.location.href = "/info";
        }
      });

      // Thêm sự kiện click cho phần tử có id="Home"

      const Home = document.getElementById("Home");

      Home.addEventListener("click", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        const isKhoa = localStorage.getItem("isKhoa")

        if (isKhoa == 0) { // Nếu là đào tạo hoặc tài chính
          window.location.href = "/maindt";
        } else {
          window.location.href = "/mainkhoa";
        }
      });
    });

  </script>

  <script>
    window.onload = function () {
      const TenNhanVien = localStorage.getItem("TenNhanVien"); // Lấy tên người dùng từ localStorage
      let Role = localStorage.getItem("userRole");
      if (Role.toUpperCase() == 'LÃNH ĐẠO KHOA') {
        Role = 'LĐK';
      }

      if (TenNhanVien) {
        // Hiển thị tên người dùng trên phần tử HTML
        document.querySelector('.fullname').innerText = `${TenNhanVien} - ${Role}`;
      } else {
        document.querySelector('.fullname').innerText = 'Hi, Guest'; // Hiển thị nếu không có tên người dùng
      }

      document.querySelector('.role').innerText = `${Role}`;

    };
  </script>
  <script>
    document.getElementById('exportButton').addEventListener('click', function () {
      // Gọi API hoặc xử lý dữ liệu để xuất
      exportData();
    });

    function exportData() {
      // Gửi yêu cầu xuất dữ liệu đến server
      fetch('/api/export-phu-luc-giang-vien-moi', {
        method: 'GET',
      })
        .then(response => response.blob())
        .then(blob => {
          // Tạo một URL cho blob và tải xuống file
          const url = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.style.display = 'none';
          a.href = url;
          a.download = 'phu_luc_giang_vien_moi.xlsx';
          document.body.appendChild(a);
          a.click();
          window.URL.revokeObjectURL(url);
        })
        .catch(error => console.error('Lỗi khi xuất dữ liệu:', error));
    }
  </script>
  <script>
    document.getElementById("changePasswordLink").addEventListener("click", function (event) {
      event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a
      const tenDangNhap = localStorage.getItem("TenDangNhap"); // Lấy TenDangNhap từ localStorage

      if (tenDangNhap) {
        // Chuyển hướng đến trang changePassword và truyền TenDangNhap trong URL
        window.location.href = `/changePassword?tenDangNhap=${encodeURIComponent(tenDangNhap)}`;
      } else {
        alert("Không tìm thấy TenDangNhap trong localStorage.");
      }
    });
  </script>
  <script>
    $(document).ready(function () {
      $('#NamHoc option[value=""]').remove();
      $('#combobox-ki option[value=""]').remove();
      $('#combobox-dot option[value=""]').remove();

      $.ajax({
        url: '/getNamHoc',
        method: 'GET',
        success: function (response) {
          if (response.success) {

            response.NamHoc.forEach(function (item) {
              console.log(item.NamHoc);
              $('#NamHoc').append(
                `<option value="${item.NamHoc}">${item.NamHoc}</option>`
              );
            });

            response.Ki.forEach(function (item) {
              console.log(item.Ki);
              $('#combobox-ki').append(
                `<option value="${item.value}">${item.Ki}</option>`
              );
            });
            response.Dot.forEach(function (item) {
              console.log(item.Dot);
              $('#combobox-dot').append(
                `<option value="${item.value}">${item.Dot}</option>`
              );
            });
          } else {
            console.error("Không lấy được dữ liệu năm học:", response.message);
          }

        },
        error: function (error) {
          console.error("Lỗi khi lấy dữ liệu năm học:", error);
        }
      });
    });
  </script>
  <script>
    $(document).ready(function () {
      $('#MaPhongBan option[value=""]').remove();
      // Gọi AJAX để lấy dữ liệu JSON từ API
      $.ajax({
        url: '/getPhongBan', // Đường dẫn tới API getPhongBan
        method: 'GET',
        success: function (response) {
          // Kiểm tra nếu response thành công
          const MaPhongBan = response.MaPhongBan;
          if (response.success) {
            $('#MaPhongBan').prepend('<option value="ALL">Tất cả khoa</option>');
            // Lặp qua từng mục trong mảng MaPhongBan
            response.MaPhongBan.forEach(function (item) {
              // Nếu item.MaPhongBan bằng boMon.MaPhongBan, hiển thị trước
              console.log(item);
              $('#MaPhongBan').append(
                `<option value="${item.MaPhongBan}">${item.MaPhongBan}</option>`
              );
            }
            );

            // Nếu không có phòng ban nào tương ứng, bạn có thể thêm tùy chọn mặc định ở đây
            if (!$('#MaPhongBan option:selected').length) {
              $('#MaPhongBan').prepend('<option value="">Chọn Phòng Ban</option>');
            }
          } else {
            console.error("Không lấy được dữ liệu phongBan:", response.message);
          }
        },
        error: function (error) {
          console.error("Lỗi khi lấy dữ liệu phongBan:", error);
        }
      });
    });
  </script>
  <script>
    // Chuyển đổi dữ liệu phòng ban thành JSON và lưu vào Local Storage
    const gvmList = <%- JSON.stringify(gvmoiList) %>;
    localStorage.setItem("gvmList", JSON.stringify(gvmList));
    console.log("Dữ liệu phòng ban đã được lưu vào Local Storage:", gvmList);

    // Hàm gợi ý bộ môn ở ô nhập 
    function showSuggestionsGvm(input) {
      const value = input.value.toLowerCase(); // Lấy giá trị nhập vào và chuyển thành chữ thường
      hideSuggestionsGvm(); // Ẩn gợi ý cũ trước khi hiển thị gợi ý mới

      // Tạo thẻ div chứa gợi ý
      const suggestionsContainer = document.createElement('div');
      suggestionsContainer.className = 'suggestions'; // Đặt class cho khung gợi ý

      // Đặt vị trí cho suggestionsContainer
      const { bottom, left, width } = input.getBoundingClientRect(); // Lấy vị trí của input
      suggestionsContainer.style.position = 'absolute'; // Để đè lên bảng
      suggestionsContainer.style.top = `${bottom + window.scrollY}px`; // Đặt vị trí ngay dưới input
      suggestionsContainer.style.left = `${left + window.scrollX}px`; // Căn trái với input
      suggestionsContainer.style.width = `${width}px`; // Chiều rộng bằng với input
      suggestionsContainer.style.zIndex = '1000'; // Đảm bảo luôn hiển thị trên các thành phần khác
      suggestionsContainer.style.maxHeight = '200px'; // Giới hạn chiều cao để không quá lớn
      suggestionsContainer.style.overflowY = 'auto';  // Cho phép cuộn dọc nếu quá nhiều gợi ý

      // Thêm suggestionsContainer vào DOM
      document.body.appendChild(suggestionsContainer); // Đặt suggestionsContainer vào body thay vì cha của input

      let suggestions = []; // Khởi tạo mảng gợi ý

      // Lấy dữ liệu từ localStorage
      const boMon = JSON.parse(localStorage.getItem("gvmList")) || []; // Giảng viên mời
      console.log(gvmList)

      suggestions = gvmList.map(item => `${item.HoTen} - ${item.MaPhongBan}`);


      // Nếu người dùng nhập dữ liệu, lọc kết quả theo tên giảng viên
      if (value) {
        suggestions = suggestions.filter(name => name.toLowerCase().includes(value));
      }

      // Nếu không có gợi ý, ẩn container
      if (suggestions.length === 0) {
        suggestionsContainer.remove();
        return; // Kết thúc hàm nếu không có gợi ý
      }

      // Tạo gợi ý dưới dạng danh sách (list)
      suggestions.forEach(name => {
        const suggestionItem = document.createElement('div'); // Tạo phần tử cho từng gợi ý
        suggestionItem.className = 'suggestion-item'; // Đặt class để tùy chỉnh giao diện
        suggestionItem.textContent = name; // Hiển thị tên giảng viên kèm theo khoa

        // Thêm sự kiện click để điền tên vào ô input
        // Thêm sự kiện click để điền tên vào ô input
        suggestionItem.onclick = function () {
          // Giả sử 'name' là giá trị gợi ý bạn nhận được từ suggestionItem
          const name = suggestionItem.innerText; // Hoặc có thể là suggestionItem.textContent

          // Tìm vị trí của dấu "-" trong chuỗi
          const dashIndex = name.indexOf("-");

          // Nếu không có dấu "-", sử dụng tên gợi ý gốc
          let processedName = name;

          if (dashIndex !== -1) {
            // Lấy phần sau dấu "-" và loại bỏ khoảng trắng
            //processedName = name.slice(dashIndex + 1).trim().replace(/\s+/g, '');
            processedName = name.slice(0, dashIndex).trim();

          }

          // Điền tên gợi ý đã xử lý vào ô input
          input.value = processedName;
          // filterBoMon();
          if (input.id == 'search-teacher') {
            filterKhoa();
          }
          hideSuggestionsGvm(); // Ẩn gợi ý sau khi chọn
        };


        suggestionsContainer.appendChild(suggestionItem); // Thêm mục vào danh sách gợi ý
      });

      // Ẩn gợi ý khi input không còn focus
      input.onblur = function () {
        setTimeout(() => {
          hideSuggestionsGvm();
        }, 100); // Thời gian chờ để nhận diện click
      };
    }

    // Hàm ẩn gợi ý
    function hideSuggestionsGvm() {
      const existingSuggestions = document.querySelectorAll('.suggestions');
      existingSuggestions.forEach(suggestion => suggestion.remove());
    }

     // calculateTotals();
  

  </script>
  
</body>

</html>